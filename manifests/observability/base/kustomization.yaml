---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: observability

helmGlobals:
  chartHome: ../../../_out/charts/

helmCharts:
  # Metric storage, providing a time-series database for long-term highly available storage of
  # Prometheus data.
  #
  # TODO: Pulled in and heavily trimmed down the defaults but this is a resource heavy system and it
  #   still takes up quite a bit. Not HA.
  # TODO: Currently pointing at a self-hosted MinIO instance, should point at Ceph
  - name: mimir-distributed
    repo: https://grafana.github.io/helm-charts
    #version:

    namespace: observability
    releaseName: observability-mimir

    # Set this if necessary
    #includeCRDs: true
    valuesFile: mimir-values.yaml

  # TODO: Prometheus here

  # TODO: This needs an object store available before it gets applied. For this cluster that is
  # going to be Ceph S3 Gateway.
  - name: loki
    repo: https://grafana.github.io/helm-charts
    version: 6.18.0

    namespace: observability
    releaseName: observability-loki

    #includeCRDs: true
    valuesFile: loki-values.yaml

  # Soft-dependency on Loki above as that is where the collected logs will be sent
  - name: promtail
    repo: https://grafana.github.io/helm-charts
    version: 6.16.6

    namespace: observability
    releaseName: observability-grafana

    # Set this if necessary
    #includeCRDs: true
    #valuesFile: promtail-values.yaml

  # Tempo collects application and system traces. Its well supported in the ecosystem and accepts
  # traces from common opentracing clients. This integrates with Mimir, Prometheus, and Loki so
  # those should be setup first. This also includes dashboards for Grafana but that setup should be
  # delayed until the stable cluster target.
  #
  # TODO: These currently configure minio backends that collide with each other. These will be
  # pointing at the Ceph S3 gateway in the cluster once that is setup.
  - name: tempo
    repo: https://grafana.github.io/helm-charts
    version: 1.11.0

    namespace: observability
    releaseName: observability-tempo

    # Set this if necessary
    #includeCRDs: true
    #valuesFile: tempo-values.yaml

  # OpenTelemetry collector, not to be confused with OpenTracing which is handled by tempo. This
  # sends its data to the Loki, Tempo, Mimir stack and exposes dashboards via Grafana (though those
  # registrations need to occur in the stable target).
  - name: alloy
    repo: https://grafana.github.io/helm-charts
    #version:

    namespace: observability
    releaseName: observability-alloy

    # Set this if necessary
    #includeCRDs: true
    #valuesFile: alloy-values.yaml

  # Display and alert system for the various log, stat, trace, and metric collection services
  # configured in this manifest.
  #
  # We want to automatically setup our datasources for this one. Other services can automatically
  # deploy managed dashboards but it requires the CRDs defined in this chart. To get around this
  # catch 22, any chart that can deploy a dashboard before this is setup will require a stable mode
  # version to enable that dashboard.
  - name: grafana
    repo: https://grafana.github.io/helm-charts
    version: 8.5.12

    namespace: observability
    releaseName: observability-grafana

    # Set this if necessary
    #includeCRDs: true
    #valuesFile: values.yaml

resources:
  - namespace.yaml
